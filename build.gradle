// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext{
        kotlin_version = '1.6.21'
    }
    repositories {
        mavenCentral()
        google()
        maven {
            url 'https://jitpack.io'
        }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.realm:realm-gradle-plugin:3.7.2"
        classpath 'com.apollographql.apollo:gradle-plugin:0.4.1'
    }
}

allprojects {
    repositories {
        mavenCentral()
        google()
        maven {
            url 'https://jitpack.io'
        }
        jcenter()
    }
}

ext {
    configuration = [
            package             : "com.duyp.architecture.mvvm",
            buildToolsVersion   : "26.0.2",
            compileVersion      : 26,
            minSdk              : 21,
            targetSdk           : 26,
            version_name        : "1.1",
            version_code        : 2
    ]

    supportVersion          = "26.1.0"
    architectureVersion     = "1.0.0-beta2"
    googleServiceVersion    = "11.0.4"
    okHttpVersion           = "3.9.0"
    retrofitVersion         = "2.3.0"
    rxJavaVersion           = "2.1.5"
    rxAndroidVersion        = "2.0.1"
    androidUtilsVersion     = "2.2.8"
    daggerVersion           = "2.12"
    leakCanaryVersion       = "1.5.4"
    timberVersion           = "4.5.1"
    streamVersion           = "1.1.9"
    butterKnifeVersion      = "8.8.1"
    state_version           = '1.1.0'
    commonmark              = "0.9.0"

    mockitoVersion          = "1.10.19"
    powerMockVersion        = "1.6.5"
    jUnitVersion            = "4.12"
    hamcrestVersion         = "1.3"
    espressoVersion         = "2.2.2"
    robolectricVersion      = "3.5"

    libraries = [

            // kotlin
             kotlin                  : "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version",
             kotlinDatabinding       : "com.android.databinding:compiler:3.0.0",
            // android support library
            supportCore             : "com.android.support:support-core-utils:${supportVersion}",
            supportAnnotation       : "com.android.support:support-annotations:${supportVersion}",
            supportAppCompatV7      : "com.android.support:appcompat-v7:${supportVersion}",
            supportDesign           : "com.android.support:design:${supportVersion}",
            supportRecyclerView     : "com.android.support:recyclerview-v7:${supportVersion}",
            supportCardView         : "com.android.support:cardview-v7:${supportVersion}",
            supportTransition       : "com.android.support:transition:${supportVersion}",
            supportPreference       : "com.android.support:preference-v14:${supportVersion}",
            supportCustomTab        : "com.android.support:customtabs:${supportVersion}",

            // rx
            rxAndroid               : "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxJava                  : "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",

            // dagger
            dagger                  : "com.google.dagger:dagger:$daggerVersion",
            daggerAndroid           : "com.google.dagger:dagger-android:$daggerVersion",
            daggerSupport           : "com.google.dagger:dagger-android-support:$daggerVersion",

            daggerCompiler          : "com.google.dagger:dagger-compiler:$daggerVersion",
            daggerAndroidCompiler   : "com.google.dagger:dagger-android-processor:$daggerVersion",

            //lombok
            lombok                  : "org.projectlombok:lombok:1.16.16",

            stream                  : "com.annimon:stream:$streamVersion",

            // android utils
            androidUtils_core       : "com.github.duyp.android-utils:core:${androidUtilsVersion}", // core (basic | common utils)
            androidUtils_image      : "com.github.duyp.android-utils:image:${androidUtilsVersion}", // Bitmap Utils
            androidUtils_glide      : "com.github.duyp.android-utils:glide:${androidUtilsVersion}", // Glide image loader utils
            androidUtils_navigation : "com.github.duyp.android-utils:navigation:${androidUtilsVersion}", // Navigation utils
            androidUtils_network    : "com.github.duyp.android-utils:network:${androidUtilsVersion}", // Network utils (SSL / TLS, Custom X509TrustManager)
            androidUtils_adapter    : "com.github.duyp.android-utils:adapter:${androidUtilsVersion}", // RecyclerView Adapters
            androidUtils_animation  : "com.github.duyp.android-utils:animation:${androidUtilsVersion}", // Animation utils (YoYo...)
            androidUtils_rx         : "com.github.duyp.android-utils:rx:${androidUtilsVersion}", // Rx utils (custom functions, task helper...)
            androidUtils_view       : "com.github.duyp.android-utils:view:${androidUtilsVersion}", // View utils, custom views...
            androidUtils_realm      : "com.github.duyp.android-utils:realm:${androidUtilsVersion}", // Realm utils (realm data access objects, realm Live data mapper, Realm live data adapter
//            androidUtils_realm      : "com.github.duyp.android-utils:realm:7f6c3add3e", // Realm utils (realm data access objects, realm Live data mapper, Realm live data adapter

            // retrofit
            retrofit                : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitRxAdapter       : "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            retrofitConverterGson   : "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitConverterScalars: "com.squareup.retrofit2:converter-scalars:${retrofitVersion}",

            // ok http
            okhttp                  : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okhttpLogging           : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",

            // google architecture components: live data
            liveData                : "android.arch.lifecycle:extensions:${architectureVersion}",

            // Event bus
            eventBus                : 'org.greenrobot:eventbus:3.0.0',

            // leak canary
            leakCanary              : "com.squareup.leakcanary:leakcanary-android:${leakCanaryVersion}",
            leakCanaryNoOp          : "com.squareup.leakcanary:leakcanary-android-no-op:${leakCanaryVersion}",

            // circular image view
            circularImageView       : 'com.mikhaellopez:circularimageview:3.0.2',

            // rx permission
            rxPermission            : 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar',

            // custom font
            calligraphy             : 'uk.co.chrisjenx:calligraphy:2.2.0',

            // place holder view
            placeHolderView         : 'com.mindorks:placeholderview:0.7.1',

            // Rx Binding
            rxBinding               : 'com.jakewharton.rxbinding2:rxbinding:2.0.0',

            // parcel
            parceler                : 'org.parceler:parceler-api:1.1.9',
            parcelerAnnotation      : 'org.parceler:parceler:1.1.9',

            // image blur
            blurry                  : 'jp.wasabeef:blurry:2.1.1',

            // timber
            timber                  : "com.jakewharton.timber:timber:$timberVersion",

            butterKnife             : "com.jakewharton:butterknife:${butterKnifeVersion}",
            butterKnifeCompiler     : "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"
    ]

    testLibraries = [
            supportTestRunner       : "com.android.support.test:runner:0.5",
            supportTestRule         : "com.android.support.test:rules:0.5",

            jUnit                   : "junit:junit:${jUnitVersion}",
            hamcrest                : "org.hamcrest:hamcrest-library:${hamcrestVersion}",
            espresso_core           : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            mockito                 : "org.mockito:mockito-core:${mockitoVersion}",

            // power mockito
            powerMockito            : "org.powermock:powermock-api-mockito2:${powerMockVersion}",
            powerMockJUnit          : "org.powermock:powermock-module-junit4:${powerMockVersion}",
            powerMockRule           : "org.powermock:powermock-module-junit4-rule:${powerMockVersion}",
            powerMockClassLoading   : "org.powermock:powermock-classloading-xstream:${powerMockVersion}",

            robolectric             : "org.robolectric:robolectric:${robolectricVersion}"
    ]
}


task clean(type: Delete) {
    delete rootProject.buildDir
}
